function chargerEtape() {
    let zonesData, elementsData, containerId, deplacablesContainerId, messageId, validateButtonId;

    if (etape === 1) {
        console.log("Chargement de l'Ã©tape 1 : Diagramme...");
        zonesData = window.diagrammezone;
        elementsData = window.diagrammeElements;
        containerId = "diagramme-container";
        deplacablesContainerId = "deplacables-diagramme-container";
        messageId = "diagramme-message";
        validateButtonId = "validate-1-button";

        document.getElementById("diagramme-container").style.display = "block";
        document.getElementById("deplacables-diagramme-container").style.display = "flex";
        document.getElementById("tableau-container").style.display = "none";
        document.getElementById("deplacables-tableau-container").style.display = "none";
        const message = document.getElementById(messageId);
        message.textContent = "DÃ©placez les Ã©lÃ©ments de droite afin de complÃ©ter le diagramme :";
      
    } else if (etape === 2) {
        console.log("Chargement de l'Ã©tape 2 : Tableau...");
        zonesData = window.tableauzones1;
        elementsData = window.tableauElementsEtape1;
        containerId = "tableau-container-fonctions";
        deplacablesContainerId = "deplacables-tableau-container";
        messageId = "tableau-message";
        validateButtonId = "validate-2-button";

        document.getElementById("titre-2").style.display = "block";

        document.getElementById("diagramme-container").style.display = "block";
        document.getElementById("deplacables-diagramme-container").style.display = "none";
        document.getElementById("validate-1-button").style.display = "none";
        document.getElementById("validate-2-button").style.display = "block";

        document.getElementById("tableau-message").style.display = "block";
        const message = document.getElementById(messageId);
        message.textContent = "Replacez les fonctions dans le tableau :";
        document.getElementById("tableau-container").style.display = "block";
        document.getElementById("tableau-container-fonctions").style.display = "block";
        document.getElementById("tableau-container-criteres-niveaux").style.display = "none";

        document.getElementById("deplacables-tableau-container").style.display = "flex";

        // RÃ©initialiser les zones de dÃ©pÃ´t avant l'Ã©tape 2
        document.querySelectorAll(".tableau-droppable").forEach(zone => {
            zone.innerHTML = "";
        });

        console.log("Zones de dÃ©pÃ´t rÃ©initialisÃ©es pour l'Ã©tape 2.");

    } else if (etape === 3) {
        console.log("Chargement de l'Ã©tape 3 : Tableau - Partie 2...");
        zonesData = window.tableauzones2;
        elementsData = window.tableauElementsEtape2;
        containerId = "tableau-container-criteres-niveaux";
        deplacablesContainerId = "deplacables-tableau-container";
        messageId = "tableau-message";
        validateButtonId = "validate-3-button"; 

        document.getElementById("deplacables-diagramme-container").style.display = "none";
        document.getElementById("validate-2-button").style.display = "none";
        document.getElementById("validate-3-button").style.display = "block";

        const message = document.getElementById(messageId);
        message.textContent = "Replacez les critÃ¨res et les niveaux dans le tableau :";
        
        document.getElementById("tableau-container").style.display = "block";
        document.getElementById("tableau-container-criteres-niveaux").style.display = "block";

        document.getElementById("deplacables-tableau-container").style.display = "flex";
    }

    if (!zonesData || !elementsData) {
        console.error("Les donnÃ©es pour cette Ã©tape ne sont pas disponibles.");
        return;
    }

    console.log("Zones chargÃ©es:", zonesData);
    console.log("Ã‰lÃ©ments chargÃ©s:", elementsData);

    const container = document.getElementById(containerId);
    const deplacablesContainer = document.getElementById(deplacablesContainerId);

    container.querySelectorAll(".diagramme-droppable, .tableau-droppable").forEach(zone => zone.remove());
    deplacablesContainer.innerHTML = "";

    // MÃ©langer alÃ©atoirement les Ã©lÃ©ments avant de les afficher
    let elementsDataShuffled = [...elementsData].sort(() => Math.random() - 0.5);

    // **ðŸ”´ CrÃ©ation des zones de dÃ©pÃ´t avec vÃ©rification**
    zonesData.forEach(zone => {
        const zoneElement = document.createElement("div");

        // âœ… Ajout de la bonne classe selon l'Ã©tape
        if (etape === 1) {
            zoneElement.classList.add("diagramme-droppable");
        } else {
            zoneElement.classList.add("tableau-droppable");
        }

        zoneElement.id = zone.id;
        zoneElement.style.position = "absolute";
        zoneElement.style.top = `${zone.top}%`;
        zoneElement.style.left = `${zone.left}%`;
        zoneElement.style.width = `${zone.width}%`;
        zoneElement.style.height = `${zone.height}%`;

        container.appendChild(zoneElement);
    });

    // **ðŸŸ¢ VÃ©rification que les zones de dÃ©pÃ´t existent bien aprÃ¨s leur crÃ©ation**
    setTimeout(() => {

        document.addEventListener("wheel", (event) => {
            if (isDragging || currentDraggedElement) {
                event.preventDefault();
                window.scrollBy(0, event.deltaY);
            }
        }, { passive: false });
        const allZones = document.querySelectorAll(etape === 1 ? ".diagramme-droppable" : ".tableau-droppable");
        console.log("ðŸ“Œ VÃ©rification aprÃ¨s crÃ©ation des zones :", allZones);

        if (allZones.length === 0) {
            console.error("âš  ProblÃ¨me : Aucune zone de dÃ©pÃ´t dÃ©tectÃ©e aprÃ¨s crÃ©ation !");
        } else {
            console.log(`âœ… ${allZones.length} zones de dÃ©pÃ´t crÃ©Ã©es avec succÃ¨s.`);
        }

        // **ðŸ”µ Initialisation du Drag & Drop aprÃ¨s la crÃ©ation des zones**
        initDragAndDrop();
        activerDragAndDrop(zonesData, elementsData, deplacablesContainerId, messageId, validateButtonId);
        activerRetourContainer(deplacablesContainerId);
    }, 100); // âœ… Petit dÃ©lai pour s'assurer que le DOM est bien mis Ã  jour

    // **ðŸ”´ CrÃ©ation des Ã©lÃ©ments dÃ©plaÃ§ables**
    elementsDataShuffled.forEach(element => {
        const elementDiv = document.createElement("div");

        // âœ… VÃ©rifier l'Ã©tape pour attribuer la bonne classe
        if (etape === 1) {
            elementDiv.classList.add("diagramme-draggable");
        } else {
            elementDiv.classList.add("bougeable");
        }

        elementDiv.id = element.id;
        elementDiv.textContent = element.nom;
        elementDiv.setAttribute("draggable", "true");

        deplacablesContainer.appendChild(elementDiv);
    });
}